{"ast":null,"code":"var _jsxFileName = \"/Users/eddyyeung/Desktop/nclex-countdown/src/components/Nav.js\";\nimport React, { useState, useContext, useLayoutEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport { GlobalContext } from \"../context/GlobalState\";\nexport default function Nav() {\n  const {\n    points,\n    questionCounter\n  } = useContext(GlobalContext);\n  const [showModal, setModal] = useState(false);\n  const [questionsAdded, setQuestions] = useState(questionCounter);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const update = {\n      points: parseFloat((questionsAdded / 26).toFixed(2)) + points,\n      questionCounter: parseInt(questionsAdded) + questionCounter\n    };\n    axios.post(\"http://localhost:5000/users/update/5ef6ae16e68a8e7b13e84842\", update).then(res => console.log(\"Successfully updated user\")).catch(err => console.log(err));\n    window.location = \"/\";\n  };\n\n  const [smallScreen, setSmallScreen] = useState(false);\n  useLayoutEffect(() => {\n    function updateSize() {\n      if (window.innerWidth < 416) {\n        setSmallScreen(true);\n      } else {\n        setSmallScreen(false);\n      }\n    }\n\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, [smallScreen]);\n  return /*#__PURE__*/React.createElement(Navbar, {\n    style: {\n      marginBottom: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    className: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Et Rewards\"), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    className: \"justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    className: \"pink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Et Points: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }\n  }, \" \", points, \" \"))), smallScreen ? \"\" : /*#__PURE__*/React.createElement(Button, {\n    className: \"add-button\",\n    onClick: () => setModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Add Points\"), /*#__PURE__*/React.createElement(Modal, {\n    size: \"sm\",\n    show: showModal,\n    onHide: () => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"example-modal-sizes-title-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Get Some Points!\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formGridAddress2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Questions Completed Today\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: e => setQuestions(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n}","map":{"version":3,"sources":["/Users/eddyyeung/Desktop/nclex-countdown/src/components/Nav.js"],"names":["React","useState","useContext","useLayoutEffect","Navbar","Button","Modal","Form","axios","GlobalContext","Nav","points","questionCounter","showModal","setModal","questionsAdded","setQuestions","onSubmit","e","preventDefault","update","parseFloat","toFixed","parseInt","post","then","res","console","log","catch","err","window","location","smallScreen","setSmallScreen","updateSize","innerWidth","addEventListener","removeEventListener","marginBottom","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useLayoutEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport default function Nav() {\n  const { points, questionCounter } = useContext(GlobalContext);\n  const [showModal, setModal] = useState(false);\n  const [questionsAdded, setQuestions] = useState(questionCounter);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const update = {\n      points: parseFloat((questionsAdded / 26).toFixed(2)) + points,\n      questionCounter: parseInt(questionsAdded) + questionCounter\n    };\n\n    axios\n      .post(\n        \"http://localhost:5000/users/update/5ef6ae16e68a8e7b13e84842\",\n        update\n      )\n      .then(res => console.log(\"Successfully updated user\"))\n      .catch(err => console.log(err));\n\n    window.location = \"/\";\n  };\n\n  const [smallScreen, setSmallScreen] = useState(false);\n  useLayoutEffect(() => {\n    function updateSize() {\n      if (window.innerWidth < 416) {\n        setSmallScreen(true);\n      } else {\n        setSmallScreen(false);\n      }\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, [smallScreen]);\n\n  return (\n    <Navbar style={{ marginBottom: 40 }}>\n      <Navbar.Brand className=\"pink\">Et Rewards</Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <div>\n          <Navbar.Brand  className=\"pink\">\n            Et Points: <span className=\"green\"> {points} </span>\n          </Navbar.Brand>\n        </div>\n        {smallScreen ? (\n          \"\"\n        ) : (\n          <Button className=\"add-button\" onClick={() => setModal(true)}>Add Points</Button>\n        )}\n\n        <Modal size=\"sm\" show={showModal} onHide={() => setModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n              Get Some Points!\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form onSubmit={onSubmit}>\n              <Form.Group controlId=\"formGridAddress2\">\n                <Form.Label>Questions Completed Today</Form.Label>\n                <Form.Control onChange={e => setQuestions(e.target.value)} />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Modal.Body>\n        </Modal>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}