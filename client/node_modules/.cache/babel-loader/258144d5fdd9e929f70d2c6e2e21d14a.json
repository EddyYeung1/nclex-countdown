{"ast":null,"code":"var _jsxFileName = \"/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\"; //useReducer helps us connect the reducer to the state\n\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst state = () => {\n  const [initialState, setInitialState] = useState({\n    points: 0,\n    questionCounter: 0\n  });\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users\").then(res => {\n      setInitialState({\n        points: res.data[0].points,\n        questionCounter: res.data[0].questionCounter\n      });\n    }).catch(err => console.log(err));\n  }, []);\n};\n\nexport const GlobalContext = createContext();\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  console.log(state); //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      points: state.points,\n      questionCounter: state.questionCounter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","state","initialState","setInitialState","points","questionCounter","get","then","res","data","catch","err","console","log","GlobalContext","GlobalContextProvider","children","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAEhB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC;AAC7CM,IAAAA,MAAM,EAAE,CADqC;AAE7CC,IAAAA,eAAe,EAAE;AAF4B,GAAD,CAAhD;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFM,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACTL,MAAAA,eAAe,CAAC;AACdC,QAAAA,MAAM,EAAEI,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYL,MADN;AAEdC,QAAAA,eAAe,EAAEG,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYJ;AAFf,OAAD,CAAf;AAIH,KAPH,EAQGK,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARhB;AASD,GAVQ,EAUN,EAVM,CAAT;AAWH,CAlBD;;AAoBA,OAAO,MAAMG,aAAa,GAAGnB,aAAa,EAAnC;AAEP,OAAO,MAAMoB,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAErD,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBrB,UAAU,CAACG,UAAD,EAAaG,YAAb,CAApC;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ,EAJqD,CAKrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,MAAM,EAAEH,KAAK,CAACG,MADT;AAELC,MAAAA,eAAe,EAAEJ,KAAK,CAACI;AAFlB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGW,QANH,CADF;AAUD,CAjCM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\n//useReducer helps us connect the reducer to the state\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nconst state = () => {\n\n    const [initialState, setInitialState] = useState({\n        points: 0,\n        questionCounter: 0\n    })\n    \n    useEffect(() => {\n      axios\n        .get(\"http://localhost:5000/users\")\n        .then(res => {\n            setInitialState({\n              points: res.data[0].points,\n              questionCounter: res.data[0].questionCounter\n            });\n        })\n        .catch(err => console.log(err));\n    }, []);\n}\n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = ({ children }) => {\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  \n  console.log(state)\n  //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        points: state.points,\n        questionCounter: state.questionCounter\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}