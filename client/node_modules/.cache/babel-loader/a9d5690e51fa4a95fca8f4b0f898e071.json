{"ast":null,"code":"import _slicedToArray from\"/Users/eddyyeung/Desktop/nclex-countdown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import Card from\"react-bootstrap/Card\";import Button from\"react-bootstrap/Button\";import Alert from\"react-bootstrap/Alert\";import axios from\"axios\";import{GlobalContext}from\"../context/GlobalState\";export default function Prize(_ref){var title=_ref.title,pointVal=_ref.pointVal,description=_ref.description,counter=_ref.counter,id=_ref.id;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useContext=useContext(GlobalContext),points=_useContext.points,questionCounter=_useContext.questionCounter;var newCount=counter-1;var newPoints=points-pointVal;var redeemPrize=function redeemPrize(e){e.preventDefault();var updatePrize={counter:counter-1};var updatePoints={points:points-pointVal,questionCounter:questionCounter};axios.post(\"http://localhost:5000/prizes/update/\".concat(id),updatePrize).then(function(res){return console.log(\"Successfully updated prize\");}).catch(function(err){return console.log(err);});axios.post(\"http://localhost:5000/users/update/5ef6ae16e68a8e7b13e84842\",updatePoints).then(function(res){return console.log(\"Successfully updated user\");}).catch(function(err){return console.log(err);});window.location=\"/\";};if(error){return/*#__PURE__*/React.createElement(Alert,{variant:\"danger\",onClose:function onClose(){return setError(false);},dismissible:true},/*#__PURE__*/React.createElement(Alert.Heading,null,\"Nice Try Slick\"),/*#__PURE__*/React.createElement(\"p\",null,\"You either don't have enough points or you can't redeem this prize anymore. \\uD83D\\uDE11\"));}if(show){return/*#__PURE__*/React.createElement(Alert,{variant:\"danger\",onClose:function onClose(){return setShow(false);},dismissible:true},/*#__PURE__*/React.createElement(Alert.Heading,null,\"Are you sure?\"),/*#__PURE__*/React.createElement(\"p\",null,\"This action is reversible, but I don't want to have to change it manually on the back end so make up your damn mind now.\"),/*#__PURE__*/React.createElement(Button,{onClick:redeemPrize},\"Yes\"));}return/*#__PURE__*/React.createElement(Card,{className:\"prize\"},/*#__PURE__*/React.createElement(Card.Header,{style:{borderBottomColor:\"#66cf8c\"}},\" \",/*#__PURE__*/React.createElement(\"strong\",null,pointVal,\" Pts \",/*#__PURE__*/React.createElement(\"span\",{style:{float:\"right\"}},counter,\" left\"))),/*#__PURE__*/React.createElement(Card.Body,{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(Card.Title,null,title),/*#__PURE__*/React.createElement(Card.Text,null,description),/*#__PURE__*/React.createElement(Button,{className:\"prize-button\",onClick:function onClick(){if(newCount<0||newPoints<0){setError(true);}else{setShow(true);}}},\"Redeem\")));}","map":{"version":3,"sources":["/Users/eddyyeung/Desktop/nclex-countdown/src/components/Prize.js"],"names":["React","useState","useContext","Card","Button","Alert","axios","GlobalContext","Prize","title","pointVal","description","counter","id","show","setShow","error","setError","points","questionCounter","newCount","newPoints","redeemPrize","e","preventDefault","updatePrize","updatePoints","post","then","res","console","log","catch","err","window","location","borderBottomColor","float","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Alert from \"react-bootstrap/Alert\";\nimport axios from \"axios\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport default function Prize({ title, pointVal, description, counter, id }) {\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(false);\n  const { points, questionCounter } = useContext(GlobalContext);\n\n  const newCount = counter - 1;\n  const newPoints = points - pointVal;\n\n  const redeemPrize = e => {\n    e.preventDefault();\n\n    const updatePrize = {\n      counter: counter - 1\n    };\n\n    const updatePoints = {\n      points: points - pointVal,\n      questionCounter: questionCounter\n    };\n\n    axios\n      .post(`http://localhost:5000/prizes/update/${id}`, updatePrize)\n      .then(res => console.log(\"Successfully updated prize\"))\n      .catch(err => console.log(err));\n\n    axios\n      .post(\n        \"http://localhost:5000/users/update/5ef6ae16e68a8e7b13e84842\",\n        updatePoints\n      )\n      .then(res => console.log(\"Successfully updated user\"))\n      .catch(err => console.log(err));\n\n    window.location = \"/\";\n  };\n\n  if (error) {\n    return (\n      <Alert variant=\"danger\" onClose={() => setError(false)} dismissible>\n        <Alert.Heading>Nice Try Slick</Alert.Heading>\n        <p>\n          You either don't have enough points or you can't redeem this prize\n          anymore. ðŸ˜‘\n        </p>\n      </Alert>\n    );\n  }\n\n  if (show) {\n    return (\n      <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n        <Alert.Heading>Are you sure?</Alert.Heading>\n        <p>\n          This action is reversible, but I don't want to have to change it\n          manually on the back end so make up your damn mind now.\n        </p>\n        <Button onClick={redeemPrize}>Yes</Button>\n      </Alert>\n    );\n  }\n\n  return (\n    <Card className=\"prize\">\n      <Card.Header style={{ borderBottomColor: \"#66cf8c\" }}>\n        {\" \"}\n        <strong>\n          {pointVal} Pts <span style={{ float: \"right\" }}>{counter} left</span>\n        </strong>\n      </Card.Header>\n      <Card.Body style={{ textAlign: \"center\" }}>\n        <Card.Title>{title}</Card.Title>\n        <Card.Text>{description}</Card.Text>\n        <Button\n          className=\"prize-button\"\n          onClick={() => {\n            if (newCount < 0 || newPoints < 0) {\n              setError(true);\n            } else {\n              setShow(true);\n            }\n          }}\n        >\n          Redeem\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}