{"ast":null,"code":"var _jsxFileName = \"/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\"; //useReducer helps us connect the reducer to the state\n\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\nexport const GlobalContext = createContext();\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  const initState = {\n    points: 0,\n    questionCounter: 0\n  };\n  const [initialState, setInitialState] = useState(initState);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users\").then(res => {\n      console.log(res.data[0].points);\n      setInitialState({\n        points: res.data[0].points,\n        questionCounter: res.data[0].questionCounter\n      });\n    }).catch(err => console.log(err));\n  }, []);\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  console.log(state.points, state.questionCounter); //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      points: state.points\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","GlobalContext","GlobalContextProvider","children","initState","points","questionCounter","initialState","setInitialState","get","then","res","console","log","data","catch","err","state","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGN,aAAa,EAAnC;AAEP,OAAO,MAAMO,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrD,QAAMC,SAAS,GAAG;AAChBC,IAAAA,MAAM,EAAE,CADQ;AAEhBC,IAAAA,eAAe,EAAE;AAFD,GAAlB;AAKA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAACM,SAAD,CAAhD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFS,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYT,MAAxB;AACAG,MAAAA,eAAe,CAAC;AACdH,QAAAA,MAAM,EAAEM,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYT,MADN;AAEdC,QAAAA,eAAe,EAAEK,GAAG,CAACG,IAAJ,CAAS,CAAT,EAAYR;AAFf,OAAD,CAAf;AAIH,KARH,EASGS,KATH,CASSC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAThB;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACG,UAAD,EAAaQ,YAAb,CAApC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACZ,MAAlB,EAA0BY,KAAK,CAACX,eAAhC,EAtBqD,CAuBrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,MAAM,EAAEY,KAAK,CAACZ;AADT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,QALH,CADF;AASD,CAlDM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\n//useReducer helps us connect the reducer to the state\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = ({ children }) => {\n  const initState = {\n    points: 0,\n    questionCounter: 0\n  };\n\n  const [initialState, setInitialState] = useState(initState)\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/users\")\n      .then(res => {\n          console.log(res.data[0].points)\n          setInitialState({\n            points: res.data[0].points,\n            questionCounter: res.data[0].questionCounter\n          });\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  console.log(state.points, state.questionCounter)\n  //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        points: state.points\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}