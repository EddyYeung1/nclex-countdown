{"ast":null,"code":"import _slicedToArray from\"/Users/eddyyeung/Desktop/nclex-countdown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useLayoutEffect}from\"react\";import Navbar from\"react-bootstrap/Navbar\";import Button from\"react-bootstrap/Button\";import Modal from\"react-bootstrap/Modal\";import Form from\"react-bootstrap/Form\";import axios from\"axios\";import{GlobalContext}from\"../context/GlobalState\";export default function Nav(){var _useContext=useContext(GlobalContext),points=_useContext.points,questionCounter=_useContext.questionCounter;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showModal=_useState2[0],setModal=_useState2[1];var _useState3=useState(questionCounter),_useState4=_slicedToArray(_useState3,2),questionsAdded=_useState4[0],setQuestions=_useState4[1];var onSubmit=function onSubmit(e){e.preventDefault();var update={points:parseFloat((questionsAdded/26).toFixed(2))+points,questionCounter:parseInt(questionsAdded)+questionCounter};axios.post(\"http://localhost:5000/users/update/5ef6ae16e68a8e7b13e84842\",update).then(function(res){return console.log(\"Successfully updated user\");}).catch(function(err){return console.log(err);});window.location=\"/\";};var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),smallScreen=_useState6[0],setSmallScreen=_useState6[1];useLayoutEffect(function(){function updateSize(){if(window.innerWidth<416){setSmallScreen(true);}else{setSmallScreen(false);}}window.addEventListener(\"resize\",updateSize);updateSize();return function(){return window.removeEventListener(\"resize\",updateSize);};},[smallScreen]);return/*#__PURE__*/React.createElement(Navbar,{style:{marginBottom:40}},/*#__PURE__*/React.createElement(Navbar.Brand,{className:\"pink\"},\"Et Rewards\"),/*#__PURE__*/React.createElement(Navbar.Toggle,null),/*#__PURE__*/React.createElement(Navbar.Collapse,{className:\"justify-content-end\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Navbar.Brand,{className:\"pink\"},\"Et Points: \",/*#__PURE__*/React.createElement(\"span\",{className:\"green\"},\" \",points,\" \"))),smallScreen?\"\":/*#__PURE__*/React.createElement(Button,{className:\"add-button\",onClick:function onClick(){return setModal(true);}},\"Add Points\"),/*#__PURE__*/React.createElement(Modal,{size:\"sm\",show:showModal,onHide:function onHide(){return setModal(false);}},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,{id:\"example-modal-sizes-title-sm\"},\"Get Some Points!\")),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Form,{onSubmit:onSubmit},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formGridAddress2\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Questions Completed Today\"),/*#__PURE__*/React.createElement(Form.Control,{onChange:function onChange(e){return setQuestions(e.target.value);}})),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Submit\"))))));}","map":{"version":3,"sources":["/Users/eddyyeung/Desktop/nclex-countdown/src/components/Nav.js"],"names":["React","useState","useContext","useLayoutEffect","Navbar","Button","Modal","Form","axios","GlobalContext","Nav","points","questionCounter","showModal","setModal","questionsAdded","setQuestions","onSubmit","e","preventDefault","update","parseFloat","toFixed","parseInt","post","then","res","console","log","catch","err","window","location","smallScreen","setSmallScreen","updateSize","innerWidth","addEventListener","removeEventListener","marginBottom","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useLayoutEffect } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport default function Nav() {\n  const { points, questionCounter } = useContext(GlobalContext);\n  const [showModal, setModal] = useState(false);\n  const [questionsAdded, setQuestions] = useState(questionCounter);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const update = {\n      points: parseFloat((questionsAdded / 26).toFixed(2)) + points,\n      questionCounter: parseInt(questionsAdded) + questionCounter\n    };\n\n    axios\n      .post(\n        \"http://localhost:5000/users/update/5ef6ae16e68a8e7b13e84842\",\n        update\n      )\n      .then(res => console.log(\"Successfully updated user\"))\n      .catch(err => console.log(err));\n\n    window.location = \"/\";\n  };\n\n  const [smallScreen, setSmallScreen] = useState(false);\n  useLayoutEffect(() => {\n    function updateSize() {\n      if (window.innerWidth < 416) {\n        setSmallScreen(true);\n      } else {\n        setSmallScreen(false);\n      }\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, [smallScreen]);\n\n  return (\n    <Navbar style={{ marginBottom: 40 }}>\n      <Navbar.Brand className=\"pink\">Et Rewards</Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <div>\n          <Navbar.Brand  className=\"pink\">\n            Et Points: <span className=\"green\"> {points} </span>\n          </Navbar.Brand>\n        </div>\n        {smallScreen ? (\n          \"\"\n        ) : (\n          <Button className=\"add-button\" onClick={() => setModal(true)}>Add Points</Button>\n        )}\n\n        <Modal size=\"sm\" show={showModal} onHide={() => setModal(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n              Get Some Points!\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form onSubmit={onSubmit}>\n              <Form.Group controlId=\"formGridAddress2\">\n                <Form.Label>Questions Completed Today</Form.Label>\n                <Form.Control onChange={e => setQuestions(e.target.value)} />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Modal.Body>\n        </Modal>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}