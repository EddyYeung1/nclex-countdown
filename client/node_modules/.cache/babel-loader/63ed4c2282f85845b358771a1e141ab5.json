{"ast":null,"code":"var _jsxFileName = \"/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\"; //useReducer helps us connect the reducer to the state\n\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nfetch = () => {\n  new Promise(resolve => {\n    const user = {};\n\n    user.json = () => Promise.resolve(\"Success!\");\n\n    resolve(user);\n  });\n};\n\nconst initialState = {\n  data: false\n};\n\nlet reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"unload\":\n      return initialState;\n\n    case \"userReady\":\n      return {\n        data: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst reloadUser = async () => {\n  try {\n    let userData = await fetch(\"http://localhost:5000/users\");\n    userData = await userData.json();\n    return userData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst userReady = data => ({\n  type: \"userReady\",\n  payload: data\n});\n\nexport const GlobalContext = createContext();\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  //   const [initialState, setInitialState] = useState(0)\n  //   useEffect(() => {\n  //     axios\n  //       .get(\"http://localhost:5000/users\")\n  //       .then(res => {\n  //           setInitialState({\n  //             points: res.data[0].points,\n  //             questionCounter: res.data[0].questionCounter\n  //           });\n  //       })\n  //       .catch(err => console.log(err));\n  //   }, []);\n  useEffect(async () => {\n    const userData = await reloadUser();\n    dispatch(userReady(userData));\n  }, []);\n  console.log(initialState);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  console.log(state); //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      points: state.points,\n      questionCounter: state.questionCounter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","fetch","Promise","resolve","user","json","initialState","data","reducer","state","action","console","log","type","payload","reloadUser","userData","error","userReady","GlobalContext","GlobalContextProvider","children","dispatch","points","questionCounter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAC,KAAK,GAAG,MAAM;AACZ,MAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrB,UAAMC,IAAI,GAAG,EAAb;;AACAA,IAAAA,IAAI,CAACC,IAAL,GAAY,MAAMH,OAAO,CAACC,OAAR,CAAgB,UAAhB,CAAlB;;AACAA,IAAAA,OAAO,CAACC,IAAD,CAAP;AACD,GAJD;AAKD,CAND;;AAQA,MAAME,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,IAAIC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,QAAL;AACE,aAAOP,YAAP;;AACF,SAAK,WAAL;AACE,aAAO;AACLC,QAAAA,IAAI,EAAEG,MAAM,CAACI;AADR,OAAP;;AAGF;AACE,aAAOL,KAAP;AARJ;AAUD,CAZD;;AAcA,MAAMM,UAAU,GAAG,YAAY;AAC7B,MAAI;AACF,QAAIC,QAAQ,GAAG,MAAMf,KAAK,CAAC,6BAAD,CAA1B;AACAe,IAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACX,IAAT,EAAjB;AAEA,WAAOW,QAAP;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD;AACF,CATD;;AAWA,MAAMC,SAAS,GAAGX,IAAI,KAAK;AACzBM,EAAAA,IAAI,EAAE,WADmB;AAEzBC,EAAAA,OAAO,EAAEP;AAFgB,CAAL,CAAtB;;AAKA,OAAO,MAAMY,aAAa,GAAGxB,aAAa,EAAnC;AAEP,OAAO,MAAMyB,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxB,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMmB,QAAQ,GAAG,MAAMD,UAAU,EAAjC;AACAO,IAAAA,QAAQ,CAACJ,SAAS,CAACF,QAAD,CAAV,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAIAL,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,QAAM,CAACG,KAAD,EAAQa,QAAR,IAAoB1B,UAAU,CAACY,OAAD,EAAUF,YAAV,CAApC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EArBqD,CAsBrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLc,MAAAA,MAAM,EAAEd,KAAK,CAACc,MADT;AAELC,MAAAA,eAAe,EAAEf,KAAK,CAACe;AAFlB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,QANH,CADF;AAUD,CAlDM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\n//useReducer helps us connect the reducer to the state\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nfetch = () => {\n  new Promise(resolve => {\n    const user = {};\n    user.json = () => Promise.resolve(\"Success!\");\n    resolve(user);\n  });\n};\n\nconst initialState = {\n  data: false\n};\n\nlet reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"unload\":\n      return initialState;\n    case \"userReady\":\n      return {\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nconst reloadUser = async () => {\n  try {\n    let userData = await fetch(\"http://localhost:5000/users\");\n    userData = await userData.json();\n\n    return userData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst userReady = data => ({\n  type: \"userReady\",\n  payload: data\n});\n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = ({ children }) => {\n  //   const [initialState, setInitialState] = useState(0)\n\n  //   useEffect(() => {\n  //     axios\n  //       .get(\"http://localhost:5000/users\")\n  //       .then(res => {\n  //           setInitialState({\n  //             points: res.data[0].points,\n  //             questionCounter: res.data[0].questionCounter\n  //           });\n  //       })\n  //       .catch(err => console.log(err));\n  //   }, []);\n  useEffect(async () => {\n    const userData = await reloadUser();\n    dispatch(userReady(userData));\n  }, []);\n  console.log(initialState);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  console.log(state);\n  //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        points: state.points,\n        questionCounter: state.questionCounter\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}