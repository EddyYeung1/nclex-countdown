{"ast":null,"code":"var _jsxFileName = \"/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\"; //useReducer helps us connect the reducer to the state\n\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nfetch = () => {\n  new Promise(resolve => {\n    const user = {};\n\n    user.json = () => Promise.resolve(\"Success!\");\n\n    resolve(user);\n  });\n};\n\nconst initialState = {\n  data: false\n};\n\nlet reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"unload\":\n      return initialState;\n\n    case \"userReady\":\n      return {\n        data: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const GlobalContext = createContext();\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  const [initialState, setInitialState] = useState(0);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users\").then(res => {\n      setInitialState({\n        points: res.data[0].points,\n        questionCounter: res.data[0].questionCounter\n      });\n    }).catch(err => console.log(err));\n  }, []);\n  console.log(initialState);\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  console.log(state); //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      points: state.points,\n      questionCounter: state.questionCounter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","fetch","Promise","resolve","user","json","initialState","data","reducer","state","action","console","log","type","payload","GlobalContext","GlobalContextProvider","children","setInitialState","get","then","res","points","questionCounter","catch","err","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAC,KAAK,GAAG,MAAM;AACV,MAAIC,OAAJ,CAAYC,OAAO,IAAI;AACnB,UAAMC,IAAI,GAAG,EAAb;;AACAA,IAAAA,IAAI,CAACC,IAAL,GAAY,MAAMH,OAAO,CAACC,OAAR,CAAgB,UAAhB,CAAlB;;AACAA,IAAAA,OAAO,CAACC,IAAD,CAAP;AACH,GAJD;AAKH,CAND;;AAQA,MAAME,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;;AAIA,IAAIC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,QAAL;AACE,aAAOP,YAAP;;AACF,SAAK,WAAL;AACE,aAAO;AACLC,QAAAA,IAAI,EAAEG,MAAM,CAACI;AADR,OAAP;;AAGF;AACE,aAAOL,KAAP;AARJ;AAUD,CAZH;;AAgBA,OAAO,MAAMM,aAAa,GAAGpB,aAAa,EAAnC;AAEP,OAAO,MAAMqB,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAErD,QAAM,CAACX,YAAD,EAAeY,eAAf,IAAkCpB,QAAQ,CAAC,CAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFmB,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACTH,MAAAA,eAAe,CAAC;AACdI,QAAAA,MAAM,EAAED,GAAG,CAACd,IAAJ,CAAS,CAAT,EAAYe,MADN;AAEdC,QAAAA,eAAe,EAAEF,GAAG,CAACd,IAAJ,CAAS,CAAT,EAAYgB;AAFf,OAAD,CAAf;AAIH,KAPH,EAQGC,KARH,CAQSC,GAAG,IAAId,OAAO,CAACC,GAAR,CAAYa,GAAZ,CARhB;AASD,GAVQ,EAUN,EAVM,CAAT;AAYAd,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,QAAM,CAACG,KAAD,EAAQiB,QAAR,IAAoB9B,UAAU,CAACG,UAAD,EAAaO,YAAb,CAApC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAnBqD,CAoBrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLa,MAAAA,MAAM,EAAEb,KAAK,CAACa,MADT;AAELC,MAAAA,eAAe,EAAEd,KAAK,CAACc;AAFlB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,QANH,CADF;AAUD,CAhDM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\n//useReducer helps us connect the reducer to the state\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nfetch = () => {\n    new Promise(resolve => {\n        const user = {}\n        user.json = () => Promise.resolve(\"Success!\")\n        resolve(user)\n    })\n}\n\nconst initialState = {\n    data: false\n}\n\nlet reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n      case \"unload\":\n        return initialState;\n      case \"userReady\":\n        return {\n          data: action.payload\n        };\n      default:\n        return state;\n    }\n  };\n\n  \n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = ({ children }) => {\n\n  const [initialState, setInitialState] = useState(0)\n    \n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/users\")\n      .then(res => {\n          setInitialState({\n            points: res.data[0].points,\n            questionCounter: res.data[0].questionCounter\n          });\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  console.log(initialState)\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  \n  console.log(state)\n  //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        points: state.points,\n        questionCounter: state.questionCounter\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}