{"ast":null,"code":"var _jsxFileName = \"/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\"; //useReducer helps us connect the reducer to the state\n\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\nexport const GlobalContext = createContext();\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  const [initialState, setInitialState] = useState(0);\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users\").then(res => {\n      setInitialState({\n        points: res.data[0].points,\n        questionCounter: res.data[0].questionCounter\n      });\n    }).catch(err => console.log(err));\n  }, []);\n  console.log(initialState);\n  console.log(state); //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      points: state.points,\n      questionCounter: state.questionCounter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/eddyyeung/Desktop/nclex-countdown/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","useState","AppReducer","axios","GlobalContext","GlobalContextProvider","children","initialState","setInitialState","state","dispatch","get","then","res","points","data","questionCounter","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAGN,aAAa,EAAnC;AAEP,OAAO,MAAMO,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAErD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACG,UAAD,EAAaK,YAAb,CAApC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,KAAK,CACFQ,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACTL,MAAAA,eAAe,CAAC;AACdM,QAAAA,MAAM,EAAED,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYD,MADN;AAEdE,QAAAA,eAAe,EAAEH,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYC;AAFf,OAAD,CAAf;AAIH,KAPH,EAQGC,KARH,CAQSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARhB;AASD,GAVQ,EAUN,EAVM,CAAT;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,YAAZ;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAnBqD,CAoBrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,MAAM,EAAEL,KAAK,CAACK,MADT;AAELE,MAAAA,eAAe,EAAEP,KAAK,CAACO;AAFlB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGV,QANH,CADF;AAUD,CAhDM","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\n//useReducer helps us connect the reducer to the state\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\";\n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = ({ children }) => {\n\n  const [initialState, setInitialState] = useState(0)\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/users\")\n      .then(res => {\n          setInitialState({\n            points: res.data[0].points,\n            questionCounter: res.data[0].questionCounter\n          });\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  console.log(initialState)\n  \n  console.log(state)\n  //   useEffect(() => {\n  //     localStorage.setItem(\n  //       \"incomeTransactions\",\n  //       JSON.stringify(state.incomeTransactions)\n  //     );\n  //     localStorage.setItem(\n  //       \"expenseTransactions\",\n  //       JSON.stringify(state.expenseTransactions)\n  //     );\n  //   });\n\n  //   const addIncome = incomeTransaction => {\n  //     dispatch({\n  //       type: \"ADD_INCOME\",\n  //       payload: incomeTransaction\n  //     });\n  //   };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        points: state.points,\n        questionCounter: state.questionCounter\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}